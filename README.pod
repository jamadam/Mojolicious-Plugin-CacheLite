=head1 NAME

Mojolicious::Plugin::Cache::Lite - On memory cache plugin [ALPHA]

=head1 SYNOPSIS

    use Mojolicious::Plugin::Cache::Lite;
    
    sub startup {
        my $self = shift;
        
        $self->plugin('cache_lite');
        
        or
        
        $self->plugin(cache_lite => {
            max_bytes => 1000000,
            key_generater => sub {
                my $c = shift;
                
                # generate key here maybe with $c
                # return undef causes cache disable
                
                return $key;
            },
        });
    }
    
    sub some_where {
        Mojolicious::Plugin::Cache::Lite->set_expire(sub {
            my $cache_timestamp = shift;
            return 1;
        });
    }

=head1 DESCRIPTION

Mojolicious::Plugin::Cache::Lite provides on memory cache mechanism for
mojolicious.

This plugin caches whole response into key-value object and returns it for next
request instead of invoking on_process code. You can specify the cache key by
giving code reference which gets mojolicious controller.

You can also specify the expiration condition from anywhere by giving code
reference for each cache key. The code reference will automatically be appended
recuresively so that every MVC models specify their own expiration condition
by themselves.

=head1 METHODS

=head2 register

$plugin->register;

Register plugin hooks in L<Mojolicious> application.

=head2 Mojolicious::Plugin::Cache::Lite->set_expire($code_ref)

This appends a code reference for cache expiration control.

=head1 AUTHOR

Sugama, E<lt>sugama@jamadam.comE<gt>

=head1 COPYRIGHT AND LICENSE

Copyright (C) 2011 by Sugama.

This program is free software; you can redistribute it and/or
modify it under the same terms as Perl itself.

=cut
